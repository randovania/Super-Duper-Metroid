name: Python Package

on:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'macos-latest'
          - 'windows-latest'
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    runs-on: ${{ matrix.os }}
    name: Wheel for ${{ matrix.os }} (${{ matrix.python }})

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python }}"
     
      - name: Install Python packages
        run: python -m pip install --upgrade build pip pytest

      - name: build wheel
        run: python -m build --wheel

      - name: build sdist
        run: python -m build --sdist
        if: ${{ matrix.os == 'macos-latest' && matrix.python == '3.12' }}
      
      - name: Store the packages
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist

  linux-build:
    strategy:
      fail-fast: false
      matrix:
        python:
          - 'cp38-cp38'
          - 'cp39-cp39'
          - 'cp310-cp310'
          - 'cp311-cp311'
          - 'cp312-cp312'

    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    name: Wheel for Linux (${{ matrix.python }})

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - run: /opt/python/${{ matrix.python }}/bin/python -m venv .venv
     
      - name: Install Python packages
        run: .venv/bin/python -m pip install --upgrade build auditwheel

      - name: build wheel
        run: .venv/bin/python -m build --wheel

      - name: multilinux stuff
        run: |
          .venv/bin/python -m auditwheel repair --plat manylinux2014_x86_64 dist/*-linux_x86_64.whl -w dist
          rm dist/*-linux_x86_64.whl
      
      - name: Store the packages
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist

  test:
    needs:
      - build
      - linux-build
      
    runs-on: ${{ matrix.os.image }}
    name: ${{ matrix.os.name }} - Test Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {name: 'macOS', image: 'macos-latest', wheel: 'macosx_*'}
          - {name: 'Windows', image: 'windows-latest', wheel: 'win_amd64'}
          - {name: 'Linux', image: 'ubuntu-latest', wheel: 'manylinux_2_17_x86_64.manylinux2014_x86_64'}
        python:
          - {version: '3.8', wheel: 'cp38-cp38'}
          - {version: '3.9', wheel: 'cp39-cp39'}
          - {version: '3.10', wheel: 'cp310-cp310'}
          - {version: '3.11', wheel: 'cp311-cp311'}
          - {version: '3.12', wheel: 'cp312-cp312'}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.version }}

      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/
            
      - name: Install Python packages
        run: python -m pip install --upgrade pip pytest

      - name: install built wheel
        run: python -m pip install dist/*-${{ matrix.python.wheel }}-${{ matrix.os.wheel }}.whl
        shell: bash

      - name: test
        run: python -m pytest
        working-directory: test

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - test
      - lint

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/
      
      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
